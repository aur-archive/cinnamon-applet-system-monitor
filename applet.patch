--- applet_old.js	2012-09-22 00:29:10.000000000 -0500
+++ applet.js	2014-11-11 10:26:24.073550147 -0600
@@ -97,8 +97,8 @@
     let schema = schemaSource.lookup('org.cinnamon.applets.system-monitor', true);
     Schema = new Gio.Settings({ settings_schema: schema });
     
-    Background = new Clutter.Color();
-    Background.from_string(Schema.get_string('background'));
+    let [res, clutterColor] = Clutter.Color.from_string(Schema.get_string('background'));
+    Background = clutterColor;
     //IconSize = Math.round(Panel.PANEL_ICON_SIZE * 4 / 5);
     //Constant doesn't exist. Took me ages to figure out WHAT caused Net() to break...
     IconSize = 16;
@@ -226,9 +226,8 @@
 
         this.colors = [];
         for(let color in this.color_name) {
-            let clutterColor = new Clutter.Color();
-            let name = this.elt + '-' + this.color_name[color] + '-color';
-            clutterColor.from_string(Schema.get_string(name));
+            let name = this.elt + '-' + this.color_name[color] + '-color';
+            let [res, clutterColor] = Clutter.Color.from_string(Schema.get_string(name));
             Schema.connect('changed::' + name, Lang.bind(
                 clutterColor, function (schema, key) {
                     this.from_string(Schema.get_string(key));
@@ -526,7 +525,7 @@
 
         if(!this.ifs.length){
             let net_lines = Cinnamon.get_file_contents_utf8_sync('/proc/net/dev').split("\n");
-            for(let i = 3; i < net_lines.length - 1 ; i++) {
+            for(let i = 2; i < net_lines.length - 1 ; i++) {
                 let ifc = net_lines[i].replace(/^\s+/g, '').split(":")[0];
                 if(Cinnamon.get_file_contents_utf8_sync('/sys/class/net/' + ifc + '/operstate')
                 .replace(/\s/g, "") == "up" && 
@@ -864,8 +863,7 @@
         // FIXME Handle colors correctly
         this.colors = ["#444", "#666", "#888", "#aaa", "#ccc", "#eee"];
         for(let color in this.colors) {
-            let clutterColor = new Clutter.Color();
-            clutterColor.from_string(this.colors[color]);
+            let [res, clutterColor] = Clutter.Color.from_string(this.colors[color]);
             this.colors[color] = clutterColor;
         }
     },
